CREATE TABLE IF NOT EXISTS ratings (
  id int4 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(10)
);

CREATE TABLE IF NOT EXISTS genres (
  id int4 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50)
);

CREATE TABLE IF NOT EXISTS films (
  id int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL,
  description varchar(2000),
  rating_id int4,
  release_date date,
  duration int4,
  FOREIGN KEY (rating_id) REFERENCES ratings (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS genres_on_films (
  genre_id int4 NOT NULL,
  film_id int8 NOT NULL,
  PRIMARY KEY (genre_id, film_id),
  FOREIGN KEY (genre_id) REFERENCES genres (id) ON DELETE SET NULL,
  FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users (
  id int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar(50) NOT NULL,
  login varchar(200) NOT NULL,
  password varchar(50),
  name varchar(100),
  birthday date
);

CREATE TABLE IF NOT EXISTS likes_on_films (
  film_id int8 NOT NULL,
  user_id int8 NOT NULL,
  PRIMARY KEY (film_id, user_id),
  FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
  FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friends (
  user_id int8 NOT NULL,
  friend_id int8 NOT NULL,
  PRIMARY KEY (user_id, friend_id),
  FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
  FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE
);
